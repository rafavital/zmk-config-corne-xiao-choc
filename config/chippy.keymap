/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 36 37 38>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q                &kp W            &kp F                &kp P              &kp B      &kp J    &kp L              &kp U                &kp Y            &kp SEMICOLON        &kp BSPC
&kp LSHFT  &hml LEFT_CONTROL A  &hml LEFT_ALT R  &hml LEFT_COMMAND S  &hml LEFT_SHIFT T  &kp G      &kp M    &hmr LEFT_SHIFT N  &hmr LEFT_COMMAND E  &hmr LEFT_ALT I  &hmr LEFT_CONTROL O  &kp SQT
&kp LCTRL  &kp Z                &mt LALT X       &kp C                &kp D              &kp V      &kp K    &kp H              &kp COMMA            &mt RALT DOT     &kp FSLH             &kp ESC
                                                 &kp ESCAPE           &kp SPACE          &lt 1 TAB  &kp RET  &kp BACKSPACE      &kp RGUI
            >;
        };

        lower_layer {
            bindings = <
&kp TAB     &kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6    &kp F7    &kp F8    &kp F9     &kp F10    &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &kp F11    &kp F12
&kp LCTRL   &kp LSHFT     &kp LALT      &trans        &trans        &trans        &trans    &trans    &trans    &kp RALT   &kp RSHFT  &kp RCTRL
                                        &kp LGUI      &trans        &kp SPACE     &kp RET   &trans    &kp RGUI
            >;
        };

        raise_layer {
            bindings = <
&kp TAB    &kp N1  &kp N2    &kp N3    &kp N4  &kp N5     &kp N6     &kp N7     &kp N8    &kp N9         &kp N0    &kp BSPC
&kp LSHFT  &trans  &trans    &trans    &trans  &tog 3     &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT       &kp BSLH  &kp GRAVE
&kp LCTRL  &trans  &kp LALT  &trans    &trans  &tog 4     &kp UNDER  &kp PLUS   &kp LBRC  &mt RALT RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans  &kp SPACE  &kp RET    &trans     &kp RGUI
            >;
        };

        gamelol_layer {
            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3    &kp N4  &kp N5     &kp Y    &trans  &trans    &trans  &trans  &kp ESC
&kp LSHFT  &kp Q   &kp W   &kp E     &kp R   &kp T      &trans   &trans  &trans    &trans  &trans  &trans
&kp LCTRL  &kp A   &kp S   &kp D     &kp F   &kp G      &kp P    &trans  &trans    &trans  &trans  &tog 3
                           &kp LALT  &kp B   &kp SPACE  &kp RET  &trans  &kp RGUI
            >;
        };

        gamefps_layer {
            bindings = <
&kp TAB    &kp N1  &kp N2  &kp N3  &kp N4  &kp N5     &kp T    &trans  &trans    &trans  &trans  &kp ESC
&kp LSHFT  &kp Q   &kp W   &kp E   &kp R   &kp T      &kp G    &trans  &trans    &trans  &kp F5  &kp F6
&kp LCTRL  &kp A   &kp S   &kp D   &kp F   &kp G      &kp B    &trans  &trans    &trans  &trans  &tog 4
                           &kp X   &kp C   &kp SPACE  &kp RET  &trans  &kp RGUI
            >;
        };
    };
};
